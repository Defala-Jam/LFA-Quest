// üìò LessonData.ts ‚Äî Banco de li√ß√µes organizado por fases

// =======================
// üîπ FASE 1
// =======================

// Quest√£o 1 ‚Äì POSCOMP 2009
export const lesson_fase1_q1 = {
  title: "POSCOMP 2009 ‚Äî Aut√¥matos Finitos N√£o Determin√≠sticos",
  explanation: `Partindo do estado inicial, um aut√¥mato aceita qualquer caminho que termine em um de seus estados de aceita√ß√£o. 
Neste caso, come√ßa em A e deve terminar em D.

Exemplo de nota√ß√£o: Œ¥(A, x) = Y, l√™-se "estando no estado A, lendo x, vai para Y".`,

  question: "Considere o aut√¥mato finito n√£o-determin√≠stico a seguir, sendo A o estado inicial e D o √∫nico estado de aceita√ß√£o.",

  alternatives: [
    "Estado Inicial A, estados de aceita√ß√£o C e D\nŒ¥(A, b) = B\nŒ¥(B, a) = C\nŒ¥(C, a) = D",
    "Estado Inicial A, estado de aceita√ß√£o C\nŒ¥(A, b) = B\nŒ¥(B, a) = C\nŒ¥(C, a) = C",
    "Estado Inicial A, estado de aceita√ß√£o D\nŒ¥(A, b) = B\nŒ¥(B, a) = D\nŒ¥(B, b) = C\nŒ¥(C, a) = D",
    "Todas as respostas acima est√£o corretas.",
    "√â imposs√≠vel converter esse aut√¥mato finito n√£o determin√≠stico em um aut√¥mato finito determin√≠stico."
  ],

  correctAnswer: 0,

  // difficulty: "m√©dio",
  // tags: ["AFNDs", "percorrer caminhos", "AFND sem lambda no inicial"]
};

// Quest√£o 2 ‚Äì POSCOMP 2009
export const lesson_fase1_q2 = {
  title: "POSCOMP 2009 ‚Äî Gram√°tica Regular",
  explanation: `Partindo do s√≠mbolo inicial (neste caso S) forma-se uma palavra resultante da gram√°tica, dependendo do caminho percorrido.
Quando um s√≠mbolo segue por um determinado caminho, diz-se que ele derivou o caminho resultante.
Exemplo: S ‚Üí ASb l√™-se "S deriva ASb".`,

  question: "Qual √© a linguagem da gram√°tica com as seguintes regras de produ√ß√£o?\nS ‚Üí ASb | c\nA ‚Üí a",

  alternatives: [
    "{a‚Åøcb | n ‚àà ‚Ñï}",
    "{acb‚Åø | n ‚àà ‚Ñï}",
    "{a‚Åøc‚Åøb | n ‚àà ‚Ñï}",
    "{a‚Åøcb‚Åø | n ‚àà ‚Ñï}",
    "Nenhuma das respostas anteriores"
  ],

  correctAnswer: 3,

  // difficulty: "f√°cil",
  // tags: ["Gram√°tica Regular", "Deriva√ß√µes"]
};

// Quest√£o 3 ‚Äì POSCOMP 2012
export const lesson_fase1_q3 = {
  title: "POSCOMP 2012 ‚Äî Convers√£o de AFN para AFD",
  explanation: `A quantidade m√°xima de estados de um AFD resultante segue a f√≥rmula 2^n, onde n √© o n√∫mero de estados do AFN.`,

  question: "Seja um Aut√¥mato Finito N√£o Determin√≠stico (AFN) com 6 estados. Aplicando-se o algoritmo de convers√£o de um AFN para um Aut√¥mato Finito Determin√≠stico (AFD), em quantos estados, no m√°ximo, resultaria o AFD considerando-se os estados in√∫teis?",

  alternatives: ["12", "36", "64", "1024", "46656"],

  correctAnswer: 2,

  // difficulty: "f√°cil",
  // tags: ["AFNDs", "Propriedade dos Aut√¥matos"]
};

// Quest√£o 4 ‚Äì POSCOMP 2013
export const lesson_fase1_q4 = {
  title: "POSCOMP 2013 ‚Äî Cadeia Vazia e Estado Inicial",
  explanation: `Um aut√¥mato aceita qualquer palavra que termine em um de seus estados de aceita√ß√£o, mesmo que este seja o pr√≥prio estado inicial.`,

  question: "Se o estado inicial for tamb√©m estado final em um aut√¥mato finito, ent√£o esse aut√¥mato:",

  alternatives: [
    "n√£o aceita a cadeia vazia.",
    "n√£o tem outros estados finais.",
    "√© determin√≠stico.",
    "aceita a cadeia vazia.",
    "√© n√£o determin√≠stico."
  ],

  correctAnswer: 3,

  // difficulty: "f√°cil",
  // tags: ["AFDs", "Propriedades dos Aut√¥matos", "An√°lise de Palavras"]
};

// Quest√£o 5 ‚Äì ENADE 2005
export const lesson_fase1_q5 = {
  title: "ENADE 2005 ‚Äî Express√µes Aritm√©ticas e Gram√°ticas",
  explanation: `O problema envolve identificar o tipo correto de gram√°tica para express√µes aritm√©ticas com regras de preced√™ncia.`,

  question: `Considere a necessidade de se implementar um componente de software que realiza c√°lculos de express√µes matem√°ticas simples para as opera√ß√µes b√°sicas. 
O software deve respeitar a preced√™ncia dos operadores. Para obter o referido software, √© correto que o projetista:`,

  alternatives: [
    "defina I e II.",
    "defina III e IV.",
    "defina I, II e IV.",
    "defina I, III e IV.",
    "defina II, III e IV."
  ],

  correctAnswer: 3,

  // difficulty: "dif√≠cil",
  // tags: ["Gram√°tica Regular", "Propriedades de Gram√°tica", "Hierarquia de Chomsky"]
};

export const lessonsFase1 = [
  lesson_fase1_q1,
  lesson_fase1_q2,
  lesson_fase1_q3,
  lesson_fase1_q4,
  lesson_fase1_q5,
];

// =======================
// üîπ FASE 2
// =======================

// Quest√£o 1 ‚Äì POSCOMP 2008
export const lesson_fase2_q1 = {
  title: "POSCOMP 2008 ‚Äî Aut√¥matos e Cadeias Reconhecidas",
  explanation: `An√°lise de um aut√¥mato finito a partir das cadeias que ele reconhece e rejeita.`,

  question: "Considere o aut√¥mato finito mostrado na figura abaixo (os c√≠rculos em negrito representam estados de aceita√ß√£o). A esse respeito, assinale a afirmativa FALSA.",

  alternatives: [
    "A palavra aaa √© reconhecida pelo aut√¥mato.",
    "A palavra ababa n√£o √© reconhecida pelo aut√¥mato.",
    "A palavra vazia √© reconhecida pelo aut√¥mato.",
    "A palavra aba √© reconhecida pelo aut√¥mato.",
    "A palavra baba √© reconhecida pelo aut√¥mato."
  ],

  correctAnswer: 3,

  // difficulty: "m√©dio",
  // tags: ["AFNDs", "Percorrer Caminhos", "AFND com Œª no inicial"]
};

// Quest√£o 2 ‚Äì UFG 2024 (adaptada)
export const lesson_fase2_q2 = {
  title: "UFG 2024 ‚Äî Aut√¥mato JFLAP (Adaptado)",
  explanation: `Analise o aut√¥mato e determine qual cadeia √© aceita a partir de suas transi√ß√µes.`,

  question: "A √∫nica cadeia de caracteres aceita pelo aut√¥mato acima √©:",

  alternatives: [
    "010000",
    "001011",
    "100110",
    "110101",
    "111000"
  ],

  correctAnswer: 3,

  // difficulty: "f√°cil",
  // tags: ["AFNDs", "Percorrer Caminhos", "AFND sem Œª no inicial"]
};

// Quest√£o 3 ‚Äì CESPE 2022
export const lesson_fase2_q3 = {
  title: "CESPE 2022 ‚Äî Aut√¥matos Determin√≠sticos",
  explanation: `Diferen√ßas fundamentais entre aut√¥matos determin√≠sticos e n√£o determin√≠sticos.`,

  question: "O aut√¥mato finito determin√≠stico:",

  alternatives: [
    "corresponde √† fun√ß√£o de transi√ß√£o que recebe um estado ou um s√≠mbolo de entrada que sempre retorna um conjunto de estados como resultado.",
    "tem a capacidade de adivinhar algo sobre sua entrada ao testar valores.",
    "pode, para cada entrada, transitar a partir do seu estado atual em um e somente um estado.",
    "permite zero, uma ou n transi√ß√µes para os estados de entrada.",
    "consegue estar em v√°rios estados ao mesmo tempo."
  ],

  correctAnswer: 2,

  // difficulty: "f√°cil",
  // tags: ["AFDs", "Propriedades dos Aut√¥matos"]
};

// Quest√£o 4 ‚Äì POSCOMP 2022 (Adaptada)
export const lesson_fase2_q4 = {
  title: "POSCOMP 2022 ‚Äî Linguagem Aceita por AFD",
  explanation: `An√°lise do conjunto de palavras aceitas por um aut√¥mato determin√≠stico.`,

  question: "Qual √© a linguagem aceita pelo Aut√¥mato Finito Determin√≠stico a seguir?",

  alternatives: [
    "L = {awa: w ‚àà {a,b}*}",
    "L = {w ‚àà {a,b}* : |w a| = 1}",
    "L = {w ‚àà {a,b}* : |w a| ‚â• 0}",
    "L = {w ‚àà {a,b}* : |w a| ‚â§ 3}",
    "L = {w ‚àà {a,b}* : |w a| √© par e |w b| ‚â§ 3}"
  ],

  correctAnswer: 2,

  // difficulty: "m√©dio",
  // tags: ["AFDs", "Percorrer Caminhos"]
};

// Quest√£o 5 ‚Äì ENADE 2008
export const lesson_fase2_q5 = {
  title: "ENADE 2008 ‚Äî Tipos de Gram√°tica",
  explanation: `An√°lise de regras de produ√ß√£o e classifica√ß√£o da gram√°tica segundo a hierarquia de Chomsky.`,

  question: `Considere a gram√°tica G definida pelas seguintes regras de produ√ß√£o:
S ‚Üí AB
AB ‚Üí AAB
A ‚Üí a
B ‚Üí b
Com rela√ß√£o a essa gram√°tica, √© correto afirmar que:`,

  alternatives: [
    "A gram√°tica G √© amb√≠gua.",
    "A gram√°tica G √© uma gram√°tica livre de contexto.",
    "A cadeia aabbb √© gerada por essa gram√°tica.",
    "√â poss√≠vel encontrar uma gram√°tica regular equivalente a G.",
    "A gram√°tica G gera a cadeia nula."
  ],

  correctAnswer: 3,

  // difficulty: "m√©dio",
  // tags: ["Gram√°tica Regular", "Deriva√ß√µes", "Propriedades das Gram√°ticas"]
};

export const lessonsFase2 = [
  lesson_fase2_q1,
  lesson_fase2_q2,
  lesson_fase2_q3,
  lesson_fase2_q4,
  lesson_fase2_q5,
];
