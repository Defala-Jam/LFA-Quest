// üìò LessonData.ts ‚Äî Banco de li√ß√µes organizado por fases

import f1q1 from "./LessonDataImages/f1q1.jpeg";

// Fase 2
import f2q1 from "./LessonDataImages/f2q1.jpeg";
import f2q2 from "./LessonDataImages/f2q2.jpeg";
import f2q4 from "./LessonDataImages/f2q4.jpeg";


// =======================
// üîπ FASE 1
// =======================

// Quest√£o 1 ‚Äì POSCOMP 2009
export const lesson_fase1_q1 = {
  title: "POSCOMP 2009 ‚Äî Aut√¥matos Finitos N√£o Determin√≠sticos",
  
  explanation: `Partindo do estado inicial, um aut√¥mato aceita qualquer caminho que termine em um de seus estados de aceita√ß√£o. 
Neste caso, come√ßa em A e deve terminar em D.
Exemplo de nota√ß√£o: Œ¥(A, x) = Y, l√™-se "estando no estado A, lendo x, vai para Y".`,

  image: f1q1,

  question: "Considere o aut√¥mato finito n√£o-determin√≠stico a seguir. Qual conjunto de transi√ß√µes e estados de aceita√ß√£o descreve corretamente esse aut√¥mato?",

  alternatives: [
    "Estado Inicial A, estados de aceita√ß√£o C e D\nŒ¥(A, b) = B\nŒ¥(B, a) = C\nŒ¥(C, a) = D",
    "Estado Inicial A, estado de aceita√ß√£o C\nŒ¥(A, b) = B\nŒ¥(B, a) = C\nŒ¥(C, a) = C",
    "Estado Inicial A, estado de aceita√ß√£o D\nŒ¥(A, b) = B\nŒ¥(B, a) = D\nŒ¥(B, b) = C\nŒ¥(C, a) = D",
    "Todas as respostas acima est√£o corretas."
  ],

  correctAnswer: 0,
};

// Quest√£o 2 ‚Äì POSCOMP 2009
export const lesson_fase1_q2 = {
  title: "POSCOMP 2009 ‚Äî Gram√°tica Regular",

  explanation: `Uma gram√°tica regular gera palavras a partir do s√≠mbolo inicial. Cada produ√ß√£o mostra como um s√≠mbolo deriva uma sequ√™ncia de s√≠mbolos terminais ou n√£o-terminais.
Exemplo: S ‚Üí ASb significa "S deriva ASb".`,

  question: "Com base nas regras de produ√ß√£o S ‚Üí ASb | c e A ‚Üí a, qual √© a linguagem gerada por essa gram√°tica?",

  alternatives: [
    "{a‚Åøcb | n ‚àà ‚Ñï}",
    "{acb‚Åø | n ‚àà ‚Ñï}",
    "{a‚Åøc‚Åøb | n ‚àà ‚Ñï}",
    "{a‚Åøcb‚Åø | n ‚àà ‚Ñï}"
  ],

  correctAnswer: 3,
};

// Quest√£o 3 ‚Äì POSCOMP 2012
export const lesson_fase1_q3 = {
  title: "POSCOMP 2012 ‚Äî Convers√£o de AFN para AFD",

  explanation: `Ao converter um AFN em AFD, cada estado do AFD representa um subconjunto de estados do AFN. O n√∫mero m√°ximo de estados do AFD √© 2^n, onde n √© o n√∫mero de estados do AFN.`,

  question: "Se um AFN tem 6 estados, qual √© o n√∫mero m√°ximo de estados do AFD resultante, considerando os estados in√∫teis?",

  alternatives: ["12", "36", "64", "1024"],

  correctAnswer: 2,
};

// Quest√£o 4 ‚Äì POSCOMP 2013
export const lesson_fase1_q4 = {
  title: "POSCOMP 2013 ‚Äî Cadeia Vazia e Estado Inicial",

  explanation: `Um aut√¥mato finito aceita qualquer palavra que termine em um de seus estados de aceita√ß√£o. Se o estado inicial tamb√©m for final, ele aceita a cadeia vazia.`,

  question: "Se o estado inicial de um aut√¥mato finito tamb√©m for estado final, o que podemos afirmar sobre esse aut√¥mato?",

  alternatives: [
    "n√£o aceita a cadeia vazia.",
    "n√£o tem outros estados finais.",
    "√© determin√≠stico.",
    "aceita a cadeia vazia."
  ],

  correctAnswer: 3,
};

// Quest√£o 5 ‚Äì ENADE 2005
export const lesson_fase1_q5 = {
  title: "ENADE 2005 ‚Äî Express√µes Aritm√©ticas e Gram√°ticas",

  explanation: `Para implementar um software que calcula express√µes matem√°ticas simples respeitando preced√™ncia, √© necess√°rio definir corretamente as regras da gram√°tica que descrevem as express√µes e operadores.`,

  question: `Para que o software funcione corretamente, qual conjunto de defini√ß√µes de gram√°tica o projetista deve usar?`,

  alternatives: [
    "defina I e II.",
    "defina III e IV.",
    "defina I, II e IV.",
    "defina I, III e IV."
  ],

  correctAnswer: 3,
};

export const lessonsFase1 = [
  lesson_fase1_q1,
  lesson_fase1_q2,
  lesson_fase1_q3,
  lesson_fase1_q4,
  lesson_fase1_q5,
];


// =======================
// üîπ FASE 2
// =======================

// Quest√£o 1 ‚Äì POSCOMP 2008
export const lesson_fase2_q1 = {
  title: "POSCOMP 2008 ‚Äî Aut√¥matos e Cadeias Reconhecidas",

  explanation: `Analise um aut√¥mato finito a partir das cadeias que ele reconhece ou rejeita. Os c√≠rculos em negrito representam estados de aceita√ß√£o.`,

  image: f2q1,

  question: "Observando o aut√¥mato acima, qual das afirmativas sobre reconhecimento de palavras √© FALSA?",

  alternatives: [
    "A palavra aaa √© reconhecida pelo aut√¥mato.",
    "A palavra ababa n√£o √© reconhecida pelo aut√¥mato.",
    "A palavra vazia √© reconhecida pelo aut√¥mato.",
    "A palavra aba √© reconhecida pelo aut√¥mato."
  ],

  correctAnswer: 3,
};

// Quest√£o 2 ‚Äì UFG 2024 (adaptada)
export const lesson_fase2_q2 = {
  title: "UFG 2024 ‚Äî Aut√¥mato JFLAP (Adaptado)",

  explanation: `Um aut√¥mato aceita ou rejeita palavras dependendo de suas transi√ß√µes e estados finais. Analise as transi√ß√µes para determinar quais cadeias s√£o aceitas.`,

  image: f2q2,

  question: "Qual √© a √∫nica cadeia de caracteres aceita pelo aut√¥mato mostrado acima?",

  alternatives: [
    "010000",
    "001011",
    "100110",
    "110101"
  ],

  correctAnswer: 3,
};

// Quest√£o 3 ‚Äì CESPE 2022
export const lesson_fase2_q3 = {
  title: "CESPE 2022 ‚Äî Aut√¥matos Determin√≠sticos",

  explanation: `Aut√¥matos determin√≠sticos possuem exatamente uma transi√ß√£o para cada s√≠mbolo de entrada a partir de cada estado, enquanto aut√¥matos n√£o determin√≠sticos podem ter m√∫ltiplas op√ß√µes.`,

  question: "Sobre aut√¥matos finitos determin√≠sticos, qual das alternativas descreve corretamente seu comportamento?",

  alternatives: [
    "corresponde √† fun√ß√£o de transi√ß√£o que recebe um estado ou um s√≠mbolo de entrada que sempre retorna um conjunto de estados como resultado.",
    "tem a capacidade de adivinhar algo sobre sua entrada ao testar valores.",
    "pode, para cada entrada, transitar a partir do seu estado atual em um e somente um estado.",
    "permite zero, uma ou n transi√ß√µes para os estados de entrada."
  ],

  correctAnswer: 2,
};

// Quest√£o 4 ‚Äì POSCOMP 2022 (Adaptada)
export const lesson_fase2_q4 = {
  title: "POSCOMP 2022 ‚Äî Linguagem Aceita por AFD",

  explanation: `Um AFD aceita um conjunto espec√≠fico de palavras. A an√°lise envolve entender o padr√£o das cadeias que passam pelo aut√¥mato e chegam a estados finais.`,

  image: f2q4,

  question: "Qual √© a linguagem aceita pelo aut√¥mato determin√≠stico mostrado acima?",

  alternatives: [
    "L = {awa: w ‚àà {a,b}*}",
    "L = {w ‚àà {a,b}* : |w a| = 1}",
    "L = {w ‚àà {a,b}* : |w a| ‚â• 0}",
    "L = {w ‚àà {a,b}* : |w a| ‚â§ 3}"
  ],

  correctAnswer: 2,
};

// Quest√£o 5 ‚Äì ENADE 2008
export const lesson_fase2_q5 = {
  title: "ENADE 2008 ‚Äî Tipos de Gram√°tica",

  explanation: `Analise as regras de produ√ß√£o da gram√°tica e sua classifica√ß√£o na hierarquia de Chomsky. Observe quais cadeias s√£o geradas e se existe equival√™ncia com gram√°tica regular.`,

  question: "Considerando a gram√°tica abaixo, qual afirma√ß√£o correta podemos fazer sobre ela?\nS ‚Üí AB\nAB ‚Üí AAB\nA ‚Üí a\nB ‚Üí b",

  alternatives: [
    "A gram√°tica G √© amb√≠gua.",
    "A gram√°tica G √© uma gram√°tica livre de contexto.",
    "A cadeia aabbb √© gerada por essa gram√°tica.",
    "√â poss√≠vel encontrar uma gram√°tica regular equivalente a G."
  ],

  correctAnswer: 3,
};

export const lessonsFase2 = [
  lesson_fase2_q1,
  lesson_fase2_q2,
  lesson_fase2_q3,
  lesson_fase2_q4,
  lesson_fase2_q5,
];